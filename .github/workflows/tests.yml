name: Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
          - os: ubuntu-latest
            python: 3.7
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: ubuntu-latest
            python: 3.8
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/cpu/torch_stable.html
            slow: True
          - os: macos-latest
            python: 3.7
            torch: 1.7.1
            torchvision: 0.8.2
            torch-source: https://download.pytorch.org/whl/torch_stable.html
          - os: windows-latest
            python: 3.7
            torch: 1.7.1+cpu
            torchvision: 0.8.2+cpu
            torch-source: https://download.pytorch.org/whl/torch_stable.html

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache checkpoints and data
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache
        key: ${{ runner.os }}-${{ hashFiles('**/*.py') }}
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Python version
      run: |
        python --version
    - name: Install
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install torch==${{ matrix.torch }} torchvision==${{ matrix.torchvision }} -f ${{ matrix.torch-source }}
        python -m pip install -e ".[test]"
    - name: Install slow dependencies
      if: matrix.slow
      run: python -m pip install -e ".[video]"
    - name: Print environment
      run: |
        python -m pip freeze
        python --version
        python -c "import openpifpaf; print(openpifpaf.__version__)"
        python -c "import openpifpaf_posetrack; print(openpifpaf_posetrack.__version__)"
    - run: pylint openpifpaf_posetrack --disable=fixme
    - name: Lint tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: |
        pylint tests/*.py --disable=fixme
    - name: pycodestyle
      run: |
        python -m pycodestyle openpifpaf_posetrack
    - name: pycodestyle tests
      if: matrix.os != 'windows-latest'  # because of path separator
      run: |
        python -m pycodestyle tests/*.py
    - name: Test
      run: |
        pytest -vv -m "not slow"
